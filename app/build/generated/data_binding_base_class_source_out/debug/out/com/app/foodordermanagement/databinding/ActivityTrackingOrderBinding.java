// Generated by view binder compiler. Do not edit!
package com.app.foodordermanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.app.foodordermanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTrackingOrderBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout layoutBottom;

  @NonNull
  public final LinearLayout layoutReceiptOrder;

  @NonNull
  public final RecyclerView rcvFoods;

  @NonNull
  public final LayoutToolbarBinding toolbar;

  @NonNull
  public final TextView tvTakeOrder;

  @NonNull
  public final TextView tvTakeOrderMessage;

  private ActivityTrackingOrderBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout layoutBottom, @NonNull LinearLayout layoutReceiptOrder,
      @NonNull RecyclerView rcvFoods, @NonNull LayoutToolbarBinding toolbar,
      @NonNull TextView tvTakeOrder, @NonNull TextView tvTakeOrderMessage) {
    this.rootView = rootView;
    this.layoutBottom = layoutBottom;
    this.layoutReceiptOrder = layoutReceiptOrder;
    this.rcvFoods = rcvFoods;
    this.toolbar = toolbar;
    this.tvTakeOrder = tvTakeOrder;
    this.tvTakeOrderMessage = tvTakeOrderMessage;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTrackingOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTrackingOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tracking_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTrackingOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_bottom;
      LinearLayout layoutBottom = rootView.findViewById(id);
      if (layoutBottom == null) {
        break missingId;
      }

      id = R.id.layout_receipt_order;
      LinearLayout layoutReceiptOrder = rootView.findViewById(id);
      if (layoutReceiptOrder == null) {
        break missingId;
      }

      id = R.id.rcv_foods;
      RecyclerView rcvFoods = rootView.findViewById(id);
      if (rcvFoods == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }
      LayoutToolbarBinding binding_toolbar = LayoutToolbarBinding.bind(toolbar);

      id = R.id.tv_take_order;
      TextView tvTakeOrder = rootView.findViewById(id);
      if (tvTakeOrder == null) {
        break missingId;
      }

      id = R.id.tv_take_order_message;
      TextView tvTakeOrderMessage = rootView.findViewById(id);
      if (tvTakeOrderMessage == null) {
        break missingId;
      }

      return new ActivityTrackingOrderBinding((RelativeLayout) rootView, layoutBottom,
          layoutReceiptOrder, rcvFoods, binding_toolbar, tvTakeOrder, tvTakeOrderMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
