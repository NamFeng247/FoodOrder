// Generated by view binder compiler. Do not edit!
package com.app.foodordermanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.foodordermanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeedbackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText edtComment;

  @NonNull
  public final EditText edtEmail;

  @NonNull
  public final EditText edtName;

  @NonNull
  public final EditText edtPhone;

  @NonNull
  public final LayoutToolbarBinding toolbar;

  @NonNull
  public final TextView tvSendFeedback;

  private ActivityFeedbackBinding(@NonNull LinearLayout rootView, @NonNull EditText edtComment,
      @NonNull EditText edtEmail, @NonNull EditText edtName, @NonNull EditText edtPhone,
      @NonNull LayoutToolbarBinding toolbar, @NonNull TextView tvSendFeedback) {
    this.rootView = rootView;
    this.edtComment = edtComment;
    this.edtEmail = edtEmail;
    this.edtName = edtName;
    this.edtPhone = edtPhone;
    this.toolbar = toolbar;
    this.tvSendFeedback = tvSendFeedback;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edt_comment;
      EditText edtComment = rootView.findViewById(id);
      if (edtComment == null) {
        break missingId;
      }

      id = R.id.edt_email;
      EditText edtEmail = rootView.findViewById(id);
      if (edtEmail == null) {
        break missingId;
      }

      id = R.id.edt_name;
      EditText edtName = rootView.findViewById(id);
      if (edtName == null) {
        break missingId;
      }

      id = R.id.edt_phone;
      EditText edtPhone = rootView.findViewById(id);
      if (edtPhone == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }
      LayoutToolbarBinding binding_toolbar = LayoutToolbarBinding.bind(toolbar);

      id = R.id.tv_send_feedback;
      TextView tvSendFeedback = rootView.findViewById(id);
      if (tvSendFeedback == null) {
        break missingId;
      }

      return new ActivityFeedbackBinding((LinearLayout) rootView, edtComment, edtEmail, edtName,
          edtPhone, binding_toolbar, tvSendFeedback);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
