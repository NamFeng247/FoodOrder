// Generated by view binder compiler. Do not edit!
package com.app.foodordermanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.foodordermanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout layoutChangePassword;

  @NonNull
  public final LinearLayout layoutContact;

  @NonNull
  public final LinearLayout layoutFeedback;

  @NonNull
  public final LinearLayout layoutSignOut;

  @NonNull
  public final TextView tvUsername;

  private FragmentAccountBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout layoutChangePassword, @NonNull LinearLayout layoutContact,
      @NonNull LinearLayout layoutFeedback, @NonNull LinearLayout layoutSignOut,
      @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.layoutChangePassword = layoutChangePassword;
    this.layoutContact = layoutContact;
    this.layoutFeedback = layoutFeedback;
    this.layoutSignOut = layoutSignOut;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_change_password;
      LinearLayout layoutChangePassword = rootView.findViewById(id);
      if (layoutChangePassword == null) {
        break missingId;
      }

      id = R.id.layout_contact;
      LinearLayout layoutContact = rootView.findViewById(id);
      if (layoutContact == null) {
        break missingId;
      }

      id = R.id.layout_feedback;
      LinearLayout layoutFeedback = rootView.findViewById(id);
      if (layoutFeedback == null) {
        break missingId;
      }

      id = R.id.layout_sign_out;
      LinearLayout layoutSignOut = rootView.findViewById(id);
      if (layoutSignOut == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = rootView.findViewById(id);
      if (tvUsername == null) {
        break missingId;
      }

      return new FragmentAccountBinding((LinearLayout) rootView, layoutChangePassword,
          layoutContact, layoutFeedback, layoutSignOut, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
